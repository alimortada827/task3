pip install Flask Flask-SQLAlchemy Flask-WTF Flask-Login


import os

class Config:
    SECRET_KEY = os.urandom(24)
    SQLALCHEMY_DATABASE_URI = 'sqlite:///store.db'
    SQLALCHEMY_TRACK_MODIFICATIONS = False


from flask_sqlalchemy import SQLAlchemy
from datetime import datetime
from flask_login import UserMixin

db = SQLAlchemy()

class User(db.Model, UserMixin):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(150), nullable=False, unique=True)
    email = db.Column(db.String(150), nullable=False, unique=True)
    password = db.Column(db.String(200), nullable=False)
    role = db.Column(db.String(50), default='customer')

class Product(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    description = db.Column(db.Text, nullable=False)
    price = db.Column(db.Float, nullable=False)
    image = db.Column(db.String(100), nullable=True)
    category = db.Column(db.String(50), nullable=False)

class Order(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    total_price = db.Column(db.Float, nullable=False)
    date = db.Column(db.DateTime, default=datetime.utcnow)
    status = db.Column(db.String(50), default='Pending')
    
    user = db.relationship('User', backref='orders', lazy=True)



from flask import Flask
from models import db
from config import Config

app = Flask(__name__)
app.config.from_object(Config)

# Initialize the database
db.init_app(app)

from routes import *

if __name__ == '__main__':
    with app.app_context():
        db.create_all()  # Create tables
    app.run(debug=True)



from flask import render_template, redirect, url_for, flash, request, session
from models import Product, Order, db
from flask_login import current_user, login_required
from forms import CheckoutForm

@app.route('/')
def index():
    products = Product.query.all()
    return render_template('product_list.html', products=products)

@app.route('/product/<int:id>')
def product_detail(id):
    product = Product.query.get_or_404(id)
    return render_template('product_detail.html', product=product)

@app.route('/cart')
def cart():
    cart_items = session.get('cart', [])
    total_price = sum(item['price'] for item in cart_items)
    return render_template('cart.html', cart_items=cart_items, total_price=total_price)

@app.route('/add_to_cart/<int:product_id>')
def add_to_cart(product_id):
    product = Product.query.get_or_404(product_id)
    cart = session.get('cart', [])
    cart.append({'id': product.id, 'name': product.name, 'price': product.price})
    session['cart'] = cart
    flash(f'Added {product.name} to cart.', 'success')
    return redirect(url_for('cart'))

@app.route('/checkout', methods=['GET', 'POST'])
@login_required
def checkout():
    form = CheckoutForm()
    if form.validate_on_submit():
        cart_items = session.get('cart', [])
        total_price = sum(item['price'] for item in cart_items)
        
        order = Order(user_id=current_user.id, total_price=total_price)
        db.session.add(order)
        db.session.commit()

        session.pop('cart', None)
        flash('Order placed successfully!', 'success')
        return redirect(url_for('order_confirmation', order_id=order.id))
    
    return render_template('checkout.html', form=form)

@app.route('/order_confirmation/<int:order_id>')
@login_required
def order_confirmation(order_id):
    order = Order.query.get_or_404(order_id)
    return render_template('order_confirmation.html', order=order)


from flask_wtf import FlaskForm
from wtforms import StringField, SubmitField
from wtforms.validators import DataRequired

class CheckoutForm(FlaskForm):
    address = StringField('Address', validators=[DataRequired()])
    phone = StringField('Phone Number', validators=[DataRequired()])
    submit = SubmitField('Place Order')



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product List</title>
</head>
<body>
    <h1>Products</h1>
    <ul>
        {% for product in products %}
            <li>
                <img src="{{ url_for('static', filename='images/' + product.image) }}" alt="{{ product.name }}" width="100">
                <a href="{{ url_for('product_detail', id=product.id) }}">{{ product.name }}</a> - ${{ product.price }}
                <form action="{{ url_for('add_to_cart', product_id=product.id) }}" method="POST">
                    <button type="submit">Add to Cart</button>
                </form>
            </li>
        {% endfor %}
    </ul>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Shopping Cart</title>
</head>
<body>
    <h1>Your Cart</h1>
    <ul>
        {% for item in cart_items %}
            <li>{{ item.name }} - ${{ item.price }}</li>
        {% endfor %}
    </ul>
    <h2>Total: ${{ total_price }}</h2>
    <a href="{{ url_for('checkout') }}">Proceed to Checkout</a>
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
</head>
<body>
    <h1>Checkout</h1>
    <form method="POST">
        {{ form.hidden_tag() }}
        {{ form.address.label }} {{ form.address() }}<br>
        {{ form.phone.label }} {{ form.phone() }}<br>
        {{ form.submit() }}
    </form>
</body>
</html>
